akka {
  loglevel = DEBUG

  http {
    server {
      server-header = stress-server/1.0
      idle-timeout = 10 s
      bind-timeout = 1s
      max-connections = 128
      remote-address-header = off
      raw-request-uri-header = off
      transparent-head-requests = on
      verbose-error-messages = off
      response-header-size-hint = 512
      backlog = 100
      default-host-header = "stress.x1.com"
      socket-options {
        so-receive-buffer-size = undefined
        so-send-buffer-size = undefined
        so-reuse-address = undefined
        so-traffic-class = undefined
        tcp-keep-alive = undefined
        tcp-oob-inline = undefined
        tcp-no-delay = undefined
      }
      parsing = ${akka.http.parsing}
    }
    host-connection-pool {
      max-connections = 32
      max-retries = 3
      max-open-requests = 128
      pipelining-limit = 1
      idle-timeout = 10 s
#      client = ${akka.http.client}
    }
    parsing {
      # The limits for the various parts of the HTTP message parser.
      max-uri-length             = 2k
      max-method-length          = 16
      max-response-reason-length = 64
      max-header-name-length     = 64
      max-header-value-length    = 8k
      max-header-count           = 64
      max-content-length         = 8m
      max-chunk-ext-length       = 256
      max-chunk-size             = 1m
      uri-parsing-mode = strict
      illegal-header-warnings = on
      error-logging-verbosity = full
      header-cache {
        default = 12
        Content-MD5 = 0
        Date = 0
        If-Match = 0
        If-Modified-Since = 0
        If-None-Match = 0
        If-Range = 0
        If-Unmodified-Since = 0
        User-Agent = 32
      }
    }
  }
  actor {
    default-dispatcher {
      type = "Dispatcher"
      #      executor = "fork-join-executor"
      executor = "thread-pool-executor"
      #      fork-join-executor {
      #        parallelism-min = 12
      #        parallelism-factor = 4.0
      #        parallelism-max = 128
      #      }
      thread-pool-executor {
        keep-alive-time = 3s
        core-pool-size-min = 4
        core-pool-size-factor = 4.0
        core-pool-size-max = 32
        max-pool-size-min = 4
        max-pool-size-factor  = 4.0
        max-pool-size-max = 32
        task-queue-size = -1
        task-queue-type = "linked"
        allow-core-timeout = on
      }
      shutdown-timeout = 1s
      throughput = 10
      throughput-deadline-time = 0ms
    }
  }
}

http {
  interface = "0.0.0.0"
  port = 8000
}

service {
  timeout = 1s
  dummy.data = [
    "kgGESe828gcpWQH_8gyh9yWHU-VQRHjMtKzJgCfNEtCHQb9KfHHQi_r_bZAXywiAyQAy3aydiFmZTaze_-43zE3Ctfd7HxHzuQSQ"
    "YzKpnEYicGK2d2ETUA4FtnU3bUTnLYU8xLr-L3GGwgE6BAWazdp3Z56-dnXwfEaUBuzNng3wK9WUjz95eUfBFixDdNuVasySTtuS"
    "n8mJJNCDgF-9S_gKx6xbxuMjQtPZB4jZE3FzFVt2RXKGV9u6L7ueF344kKkUiVTL38rPLJPd-aVnrHPnXw-rzVbLXLS7tduQCfP5"
    "AcSjFYJ2Dx-gCV2u8cCAp-RfNyL44jZbwjkrKPdDSdcDiQkLPAeNhsBHuidF2Wx4bSZsLZY8skHTVLyPQRTKL6QzmrKGV397S723"
    "errMVinrtHUJZdMByjJpFVRiEhkxArCBCickWeCsidSBdcr7XDDFNKVtBkNfxLxCHN7rBWuYP4HF7JCmTMd3UaenCmZfiAkg79FN"
    "MM3jTtPQRiZtz9kgr3cZ5nXpxDH5F957tsYCR-JJQXynhkjNxi4ipWH-ZfYRLKg9Jrd7EuTfEkrLBmZDD6se42kZRBRbBbKca8r5"
    "fjGPXiT7tk8wLX7Kj5jK858SeCnpF9EtGembDE5J7wSQ7QXjpAM4gNaZG26g2DY3XKBFdnjewR74tfWQnh4BjzKfEH7RNbWnuGsn"
    "W96C7b7dVbHc_F8jcf4SnZyBkk_rNTVxcydMhK3PDbP5PSjgx5AiUDxnxLRnfPFXgds-2zDx-S64wb9tRJci7BWnxUybNG2sYUZH"
    "6PyGRVxP87RtfQCnsQ8WWGHS4tzNewfBMV6xzi_9eeL2x8iwC46izgEGKkXZK79DanwZL9zj7y_d8K2GsyLNn3aNPdaBipCbtJLp"
    "zjk5w5yXnAke4iD9BsCp9rZaVbH7fEJRyzg96WWDxrenbWmAnutwkC3RxpmKUQX8iyk4sdfkbxsbPD_AfQH4p2WQ_WPjDMTCNFtm"
  ]
}